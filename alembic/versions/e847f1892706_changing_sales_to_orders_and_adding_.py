"""changing sales to orders and adding order status

Revision ID: e847f1892706
Revises: b8bc0a5e5026
Create Date: 2025-07-03 09:54:21.666044

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e847f1892706'
down_revision: Union[str, Sequence[str], None] = 'b8bc0a5e5026'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sales_sale_id'), table_name='sales')
    op.drop_table('sales')
    op.add_column('orders', sa.Column('order_id', sa.BigInteger(), nullable=False))
    op.drop_index(op.f('ix_orders_sale_id'), table_name='orders')
    op.create_index(op.f('ix_orders_order_id'), 'orders', ['order_id'], unique=False)
    op.drop_column('orders', 'sale_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('orders', sa.Column('sale_id', sa.BIGINT(), autoincrement=True, nullable=False))
    op.drop_index(op.f('ix_orders_order_id'), table_name='orders')
    op.create_index(op.f('ix_orders_sale_id'), 'orders', ['sale_id'], unique=False)
    op.drop_column('orders', 'order_id')
    op.create_table('sales',
    sa.Column('sale_id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.customer_id'], name=op.f('sales_customer_id_fkey')),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], name=op.f('sales_product_id_fkey')),
    sa.PrimaryKeyConstraint('sale_id', name=op.f('sales_pkey'))
    )
    op.create_index(op.f('ix_sales_sale_id'), 'sales', ['sale_id'], unique=False)
    # ### end Alembic commands ###
